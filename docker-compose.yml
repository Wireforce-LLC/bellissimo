version: "3.8"

services:  
  mongo_seed:
    image: mongo:latest
    container_name: import-db
    depends_on:
      - mongo
    volumes:
      - ./containers/import_db.sh:/import_db.sh:ro
      - ./containers/mongo_default_filters.json:/mongo_default_filters.json:ro

      - ./docker/mongodb:/data
    command: /import_db.sh

  bellissimo-web-auth:
    container_name: bell-web-guard
    image: 'beevelop/nginx-basic-auth'
    ports:
      - '1337:80'
    env_file:
      - docker.env
      ## escape $ with $$ in Docker yml due to variable expansion
      ## example user/pass generated with htpasswd is foo:bar
      # - HTPASSWD=foo:$$apr1$$odHl5EJN$$KbxMfo86Qdve2FH4owePn.

  mongo:
    restart: always
    container_name: mongo
    image: mongo:latest
    volumes:
      - ./docker/mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  redis:
    container_name: redis
    restart: always
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  bellissimo-web:
    restart: always
    image: node:20
    container_name: bellissimo-web
    volumes:
      - ./web:/app
    working_dir: /app
    command: npm run start
    # ports:
    #   - 3000:3000
    env_file:
      - docker.env
    depends_on:
      - redis
      - mongo

  phpfpm:
    container_name: phpfpm
    image: 'bitnami/php-fpm:latest'
    volumes:
      - ./public:/usr/src/app/public
 
  bell-elasticsearch:
    restart: always
    user: root
    image: 'bitnami/elasticsearch:latest'
    container_name: bell-elasticsearch
    volumes:
      - ./docker/elasticsearch-data-persistence:/bitnami/elasticsearch/data
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  bellissimo:
    restart: always
    image: bellissimo-bin
    container_name: bell
    volumes:
      - ./plugins.toml:/usr/src/app/plugins.toml:ro
      - ./plugins:/usr/src/app/plugins
      - ./public:/usr/src/app/public
      - ./registry:/usr/src/app/registry
      - ./containers:/usr/src/app/containers/:ro
      - ./ipsum.toml:/usr/src/app/ipsum.toml:ro
      - ./config.local.toml:/usr/src/app/config.local.toml:ro
      - ./config.toml:/usr/src/app/config.toml:ro
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_URI=redis://redis/
      - MONGO_URI=mongodb://mongo:27017
      - PHP_FPM_HOST=phpfpm
      - PHP_FPM_PORT=9000
      - ELASTIC_URI=http://bell-elasticsearch:9200
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
      # phpfpm:
      #   condition: service_healthy
      bell-elasticsearch:
       condition: service_healthy

  # varnish:
  #   image: varnish:stable
  #   container_name: varnish
  #   volumes:
  #     - "./default.vcl:/etc/varnish/default.vcl"
  #   # ports:
  #   #   - "80:80"
  #   tmpfs:
  #     - /var/lib/varnish:exec
  #   environment:
  #     - VARNISH_SIZE=2G  
  #   command: "-p default_keep=300"
  #   depends_on:
  #     - bellissimo-collector
  #     - redis
  #     - mongo
  #     - bellissimo
  #     - nginx

  # bellissimo-collector:
  #   container_name: bell-bg
  #   restart: always
  #   image: bellissimo-bin
  #   environment:
  #     - REDIS_URI=redis://redis/
  #     - MONGO_URI=mongodb://mongo:27017
  #   command: '/usr/src/app/target/release/bellissimo --mode=background'
  #   depends_on:
  #     - bellissimo
  #     - redis
  #     - mongo

  nginx:
    restart: always
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    # ports:
      # - "443:443"

    ports:
      - 80:80
      - 443:443
    depends_on:
      - bellissimo