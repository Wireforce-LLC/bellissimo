worker_processes 1;
 
events { worker_connections 1024; }
 
http {
    sendfile on;
 
    upstream docker-reverse {
        server bellissimo:8000;
    }
 
    server {
        listen 80;
 
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' '*';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' '*';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            
            proxy_pass         http://docker-reverse;
            proxy_redirect     off;
            proxy_set_header Host $host;
            proxy_set_header Hostname $hostname;
            proxy_set_header Realpath-Root $realpath_root;
            proxy_set_header Remote-Addr $remote_addr;
            proxy_set_header Remote-Port $remote_port;
            proxy_set_header Request-ID $request_id;
            proxy_set_header Request-URI $request_uri;
            proxy_set_header Scheme $scheme;
            proxy_set_header Secure-Link $secure_link;
            proxy_set_header Server-Name $server_name;
            proxy_set_header Server-Addr $server_addr;
            proxy_set_header Server-Protocol $server_protocol;
            proxy_set_header Session-Time $session_time;
            proxy_set_header Slice-Range $slice_range;

        }
    }
}